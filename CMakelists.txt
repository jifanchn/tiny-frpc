cmake_minimum_required(VERSION 3.10)
project(tiny-frpc C)

# Set C standard
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)

# Options
option(BUILD_EXAMPLES "Build examples" ON)
option(BUILD_TESTS "Build tests" ON)
option(BUILD_CGO_TESTS "Build CGO tests" OFF)
option(ENABLE_COVERAGE "Enable coverage reporting" OFF)

# Default build type
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build" FORCE)
endif()

# Compiler flags
if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_C_COMPILER_ID MATCHES "Clang")
  # Add base flags
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -pedantic")
  
  # Debug build flags
  set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -g3 -O0")
  
  # Release build flags
  set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O2")
  
  # Coverage flags
  if(ENABLE_COVERAGE)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} --coverage -fprofile-arcs -ftest-coverage")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} --coverage -lgcov")
  endif()
endif()

# Include directories
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/externals/tiny-yamux/include)

# Source files
set(SOURCES
    src/frpc.c
    src/frpc_protocol.c
    src/frpc_handler.c
    src/yamux_wrapper.c
    src/frpc_visitor.c
    src/frpc_tcp_listener.c
)

# Add yamux as dependency but disable its tests
set(BUILD_TESTS_ORIGINAL ${BUILD_TESTS})
set(BUILD_TESTS OFF CACHE BOOL "Temporarily disable tests for yamux" FORCE)
add_subdirectory(externals/tiny-yamux)
set(BUILD_TESTS ${BUILD_TESTS_ORIGINAL} CACHE BOOL "Restore original BUILD_TESTS value" FORCE)

# Core library target
add_library(tiny-frpc STATIC ${SOURCES})
target_link_libraries(tiny-frpc PUBLIC tiny_yamux tiny_yamux_port)



# Install rules
# install(TARGETS tiny-frpc
#         ARCHIVE DESTINATION lib
#         LIBRARY DESTINATION lib
#         RUNTIME DESTINATION bin)
install(DIRECTORY include/ DESTINATION include/tiny-frpc)

# Examples
if(BUILD_EXAMPLES)
  add_subdirectory(examples)
endif()

# Tests
if(BUILD_TESTS)
  enable_testing()
  add_subdirectory(tests/c_tests)
endif()

# CGO Tests (Optional)
if(BUILD_CGO_TESTS)
  add_subdirectory(tests/cgo_tests)
endif()

# Print configuration summary
message(STATUS "Configuration:")
message(STATUS "  Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "  Build examples: ${BUILD_EXAMPLES}")
message(STATUS "  Build tests: ${BUILD_TESTS}")
message(STATUS "  Build CGO tests: ${BUILD_CGO_TESTS}")
message(STATUS "  Enable coverage: ${ENABLE_COVERAGE}")
